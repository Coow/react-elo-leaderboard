// <auto-generated />
using System;
using ELO.Leaderboard.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace react_elo_leaderboard.Migrations
{
    [DbContext(typeof(ELOLeaderboardDbContext))]
    [Migration("20211111212010_Mig2-UniqueNick")]
    partial class Mig2UniqueNick
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ELO.Leaderboard.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MatchEnded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<bool>("Team1Forfeit")
                        .HasColumnType("bit");

                    b.Property<int>("Team1Score")
                        .HasColumnType("int");

                    b.Property<bool>("Team1Win")
                        .HasColumnType("bit");

                    b.Property<bool>("Team2Forfeit")
                        .HasColumnType("bit");

                    b.Property<int>("Team2Score")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ELO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1000);

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Losses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("PlayerId");

                    b.HasIndex("Nick")
                        .IsUnique();

                    b.ToTable("Player");
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MatchId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("MatchId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("PlayerTeam", b =>
                {
                    b.Property<int>("PlayersPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsTeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayersPlayerId", "TeamsTeamId");

                    b.HasIndex("TeamsTeamId");

                    b.ToTable("PlayerTeam");
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Match", b =>
                {
                    b.HasOne("ELO.Leaderboard.Models.Player", null)
                        .WithMany("Matches")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Team", b =>
                {
                    b.HasOne("ELO.Leaderboard.Models.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("PlayerTeam", b =>
                {
                    b.HasOne("ELO.Leaderboard.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ELO.Leaderboard.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Match", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("ELO.Leaderboard.Models.Player", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
